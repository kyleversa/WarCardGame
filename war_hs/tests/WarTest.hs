module Main where
    import Test.HUnit
    import Data.List
    import Data.Array.IO
    import System.Random
    import Control.Monad
    import qualified War
    import qualified System.Exit as Exit

    main = do
        status <- runTestTT alltests
        if failures status > 0 || errors status > 0 then Exit.exitFailure else Exit.exitSuccess
       
    deal = War.deal

    test01 = TestCase (assertEqual "t01" r01 (deal t01))
    test02 = TestCase (assertEqual "t02" r02 (deal t02))
    test03 = TestCase (assertEqual "t03" r03 (deal t03))
    test04 = TestCase (assertEqual "t04" r04 (deal t04))
    test05 = TestCase (assertEqual "t05" r05 (deal t05))
    test06 = TestCase (assertEqual "t06" r06 (deal t06))
    test07 = TestCase (assertEqual "t07" r07 (deal t07))
    test08 = TestCase (assertEqual "t08" r08 (deal t08))
    test09 = TestCase (assertEqual "t09" r09 (deal t09))
    test10 = TestCase (assertEqual "t10" r10 (deal t10))
    test11 = TestCase (assertEqual "t11" r11 (deal t11))
    test12 = TestCase (assertEqual "t12" r12 (deal t12))
    test13 = TestCase (assertEqual "t13" r13 (deal t13))
    test14 = TestCase (assertEqual "t14" r14 (deal t14))
    test15 = TestCase (assertEqual "t15" r15 (deal t15))
    test16 = TestCase (assertEqual "t16" r16 (deal t16))
    test17 = TestCase (assertEqual "t17" r17 (deal t17))
    test18 = TestCase (assertEqual "t18" r18 (deal t18))
    test19 = TestCase (assertEqual "t19" r19 (deal t19))
    test20 = TestCase (assertEqual "t20" r20 (deal t20))

    hctests = [ test01, test02, test03, test04, test05, test06, test07, test08, test09, test10, 
                test11, test12, test13, test14, test15, test16, test17, test18, test19, test20 ]
                
    alltests = TestList $ hctests ++ (randPerm nPerm)

    nPerm = 500
    nCorr = 25


    massPerm :: Int -> IO Int -> IO Int
    massPerm 0 nPass = nPass
    massPerm n nPass = do
        shuf <- shuffle deck
        np <- nPass
        if deck == ((sort.deal) shuf) 
        then massPerm (n-1) (return $ np+1)
        else massPerm (n-1) (return np)

    randPerm :: Int -> [Test]
    randPerm n = 
        [TestCase $ do 
        nc <- massPerm nPerm (return 0)
        let testLabel = "Output is permutation of input - " ++ (show nPerm) ++ " trials:"
        assertEqual testLabel nPerm nc]

    --randPerm :: Int -> [Test]
    --randPerm n =  
    --    replicate n (TestCase $ do
    --    shuf <- shuffle deck
    --    assertEqual "randPerm" deck ((sort.deal) shuf))

    shuffle :: [a] -> IO [a]
    shuffle [] = return []
    shuffle xs = do
        i <- getStdRandom $ randomR (0, length xs - 1)
        let (left, (a:right)) = splitAt i xs
        fmap (a:) (shuffle $ left ++ right)





    deck = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13]

    t01 = [1,1,1,1,13,13,13,13,11,11,11,11,12,12,12,12,10,10,10,10,9,9,9,9,7,7,7,7,8,8,8,8,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2]
    r01 = [1,1,1,1,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2]
    t02 = [1,13,1,13,1,13,1,13,12,11,12,11,12,11,12,11,10,9,10,9,10,9,10,9,8,7,8,7,8,7,8,7,6,5,6,5,6,5,6,5,4,3,4,3,4,3,4,3,2,2,2,2] 
    r02 = [4,3,2,2,2,2,4,3,4,3,4,3,6,5,6,5,6,5,6,5,8,7,8,7,8,7,8,7,10,9,10,9,10,9,10,9,12,11,12,11,12,11,12,11,1,13,1,13,1,13,1,13] 
    t03 = [13,1,13,1,13,1,13,1,11,12,11,12,11,12,11,12,9,10,9,10,9,10,9,10,7,8,7,8,7,8,7,8,5,6,5,6,5,6,5,6,3,4,3,4,3,4,3,4,2,2,2,2] 
    r03 = [4,3,2,2,2,2,4,3,4,3,4,3,6,5,6,5,6,5,6,5,8,7,8,7,8,7,8,7,10,9,10,9,10,9,10,9,12,11,12,11,12,11,12,11,1,13,1,13,1,13,1,13] 
    t04 = [10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9] 
    r04 = [1,1,13,12,9,5,11,4,9,3,8,7,7,2,13,10,12,5,10,4,9,6,8,3,1,1,13,12,7,5,11,4,9,3,8,6,7,2,13,10,12,5,11,11,10,8,6,4,6,3,2,2] 
    t05 = [1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13,1,2,3,4,5,6,7,8,9,10,11,12,13] 
    r05 = [1,10,13,8,11,9,8,7,11,8,13,7,13,6,12,6,9,5,8,5,7,4,7,4,11,6,12,10,6,3,2,2,12,5,9,3,10,4,9,2,10,3,5,2,1,1,1,13,12,11,4,3] 
    t06 = [2,3,3,3,2,2,3,2,5,4,5,4,5,4,5,4,7,6,7,6,7,6,7,6,9,8,9,8,9,8,9,8,11,10,11,10,11,10,11,10,13,12,13,12,1,12,1,12,1,13,1,13]
    r06 = [1,12,13,12,13,12,11,10,11,10,11,10,11,10,9,8,9,8,9,8,9,8,7,6,7,6,7,6,7,6,5,4,5,4,5,4,5,4,3,2,1,3,13,3,1,3,13,2,1,2,12,2]
    t07 = [10,6,3,11,9,13,12,4,7,1,1,13,2,7,6,10,8,2,4,12,11,8,4,9,3,3,2,10,5,8,5,13,6,4,7,1,12,9,3,5,2,13,9,11,12,7,6,5,1,11,10,8]
    r07 = [8,3,11,11,11,10,8,7,5,5,4,2,4,2,1,9,12,9,7,6,4,2,1,1,1,13,13,10,9,8,6,3,11,9,12,8,10,5,7,5,13,6,13,3,12,6,12,4,10,3,7,2]
    t08 = [9,9,8,5,13,8,3,6,10,9,5,9,7,1,6,1,3,11,8,10,2,5,10,4,1,12,7,3,4,13,5,11,2,11,1,7,12,6,8,7,13,13,2,4,2,4,12,11,3,12,6,10]
    r08 = [5,3,13,7,13,10,12,6,11,6,10,6,8,5,7,2,9,8,6,4,5,4,11,7,13,12,3,3,3,2,11,9,10,5,7,4,1,13,1,12,11,10,9,4,9,2,8,2,1,1,12,8]
    t09 = [13,3,11,2,5,1,9,3,12,11,11,8,6,8,9,6,13,6,1,4,5,3,10,11,13,7,7,5,13,4,3,10,10,12,4,10,4,5,8,8,2,1,9,2,7,9,12,1,7,12,2,6]
    r09 = [6,4,1,2,12,2,1,13,1,7,9,6,1,13,13,12,9,5,5,3,12,11,11,10,9,2,13,3,10,2,11,8,10,8,11,7,10,6,5,4,12,7,4,3,9,7,8,6,8,4,5,3]
    t10 = [11,8,3,8,4,5,13,6,10,4,9,13,2,6,12,12,1,3,2,8,4,5,11,5,8,12,6,5,9,4,10,10,6,10,11,2,1,2,3,7,11,13,13,1,12,9,1,7,7,9,7,3]
    r10 = [7,4,10,9,6,5,10,9,8,3,13,12,10,6,11,8,8,3,12,5,6,4,11,3,4,2,1,12,1,13,1,8,1,2,13,11,12,9,11,9,6,4,7,3,5,2,5,2,13,10,7,7]
    t11 = [10,2,3,4,12,7,6,3,5,5,10,6,4,1,3,5,13,5,12,7,3,2,6,11,1,8,13,8,2,11,1,4,11,12,11,1,9,4,7,10,12,13,13,6,8,10,9,2,8,9,7,9]
    r11 = [7,3,1,13,12,12,11,11,10,5,10,10,9,7,4,3,7,3,6,2,1,1,8,7,2,2,1,8,12,2,11,10,8,6,13,6,9,9,5,5,5,3,13,13,12,11,8,4,9,6,4,4]
    t12 = [13,9,11,4,7,6,12,2,10,8,5,9,11,6,10,3,13,8,2,4,10,8,11,1,4,6,12,7,1,5,1,13,2,3,12,1,5,9,2,3,4,3,11,7,5,12,8,13,6,9,7,10]
    r12 = [3,2,11,6,6,4,12,4,9,7,6,5,2,2,11,9,13,7,9,6,11,4,10,3,1,1,13,13,13,12,1,1,12,10,8,8,12,11,5,4,10,7,9,5,10,8,8,7,5,3,3,2]
    t13 = [1,2,1,2,1,2,1,2,3,4,3,4,3,4,3,4,5,6,5,6,5,6,5,6,7,8,7,8,7,8,7,8,9,10,9,10,9,10,9,10,11,12,11,12,11,12,11,12,13,13,13,13]
    r13 = [9,8,2,2,11,5,4,2,9,4,5,2,1,8,12,7,11,6,1,9,10,3,13,10,5,3,1,10,10,9,12,6,7,4,1,8,6,3,13,8,13,7,13,5,12,6,12,4,11,7,11,3]
    t14 = [7,4,1,2,1,8,8,1,2,2,10,10,12,6,9,10,3,13,11,7,12,7,10,3,9,11,5,4,8,13,7,2,9,4,11,6,12,11,8,9,1,12,5,13,3,5,4,6,6,13,3,5]
    r14 = [8,7,3,2,1,6,10,4,12,4,10,2,1,10,1,8,13,8,13,7,12,5,4,3,13,7,13,5,12,11,9,7,9,6,9,4,12,6,5,3,11,3,9,2,1,11,11,10,6,2,8,5]
    t15 = [8,7,3,2,1,6,10,4,12,4,10,2,1,10,1,8,13,8,13,7,12,5,4,3,13,7,13,5,12,11,9,7,9,6,9,4,12,6,5,3,11,3,9,2,1,11,11,10,6,2,8,5]
    r15 = [8,5,6,2,11,10,1,11,9,2,11,3,5,3,12,6,9,4,9,6,9,7,12,11,13,5,13,7,4,3,12,5,13,7,13,8,1,8,1,10,10,2,12,4,10,4,1,6,3,2,8,7]
    t16 = [12,10,11,9,13,9,8,6,12,9,7,5,1,5,7,3,10,3,6,2,10,9,5,3,4,2,1,1,13,12,10,5,6,2,1,8,11,8,4,4,3,2,13,11,12,7,6,4,13,8,11,7]
    r16 = [11,7,13,8,6,4,12,7,13,11,3,2,1,11,8,8,4,4,6,2,10,5,13,12,1,1,5,4,3,2,10,9,6,2,10,3,7,3,1,5,7,5,12,9,8,6,13,9,11,9,12,10]
    t17 = [13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1,13,12,11,10,9,8,7,6,5,4,3,2,1]
    r17 = [1,9,13,7,13,6,12,11,11,8,4,3,11,6,9,2,9,8,8,5,9,5,8,2,1,10,12,7,13,10,7,5,11,6,6,4,1,12,5,3,13,10,4,3,1,10,4,2,12,7,3,2]
    t18 = [1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13]
    r18 = [1,1,1,1,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2]
    t19 = [13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2,1,1,1,1]
    r19 = [1,1,1,1,13,13,13,13,12,12,12,12,11,11,11,11,10,10,10,10,9,9,9,9,8,8,8,8,7,7,7,7,6,6,6,6,5,5,5,5,4,4,4,4,3,3,3,3,2,2,2,2]
    t20 = [1,2,3,4,5,6,7,8,9,10,11,12,1,2,3,4,5,6,7,8,9,10,11,12,1,2,3,4,5,6,7,8,9,10,11,12,1,2,3,4,5,6,7,8,9,10,11,12,13,13,13,13]
    r20 = [5,2,9,6,1,6,11,4,10,5,9,3,13,5,11,3,1,4,12,2,7,2,3,2,1,13,13,11,10,10,13,12,12,9,7,4,1,7,10,4,11,5,6,3,12,9,8,8,8,8,7,6]